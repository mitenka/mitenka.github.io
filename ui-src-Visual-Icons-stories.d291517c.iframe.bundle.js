(self.webpackChunkpaysend_3_0=self.webpackChunkpaysend_3_0||[]).push([[758],{"./packages/ui/src/Visual/Icons.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Icons_stories});__webpack_require__("./node_modules/react/index.js");var _Primary$parameters,_Primary$parameters2,Visual=__webpack_require__("./packages/ui/src/Visual/Visual.tsx"),assets=__webpack_require__("./packages/assets/index.ts"),ui=__webpack_require__("./packages/ui/index.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Icons_stories={component:Visual.u,title:"Icons"};var Primary={args:{widget:{options:{iconName:["ic_arrow_back","ic_arrow_down","ic_arrow_down_left","ic_arrow_forward","ic_arrow_forward_circle","ic_arrow_retry","ic_arrow_rounded_back","ic_arrow_up","ic_arrow_up_right","ic_arrows_exchange","ic_arrows_recurring","ic_arrows_transfers","ic_bank","ic_card","ic_cardp_plus","ic_cash","ic_check","ic_check_circle","ic_check_circle_small","ic_check_circle_thin","ic_chevron_down","ic_chevron_down_big","ic_chevron_down_small","ic_chevron_right","ic_chevron_right_big","ic_chevron_up","ic_chevron_up_big","ic_clock_filled_small","ic_clock_thin","ic_cloud","ic_coins","ic_document","ic_dotted_list","ic_ghost","ic_gift","ic_life_buoy","ic_pencil","ic_people","ic_person","ic_plus","ic_plus_circle","ic_plus_minus","ic_search","ic_settings","ic_shopping_bag","ic_speedometer","ic_trash","ic_truck","ic_wallet","ic_x","ic_x_circle","ic_x_circle_small","ic_x_circle_thin"]}}},render:function render(args){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ui.tt,{content:"Small icons (24px)",options:{variant:"header",margin:{bottom:"24"}}}),(0,jsx_runtime.jsx)("div",{style:{display:"flex",flexWrap:"wrap",marginBottom:"32px"},children:args.widget.options.iconName.map((function(iconName,index){var IconComponent=assets[iconName];return iconName.includes("thin")||iconName.includes("small")?null:(0,jsx_runtime.jsxs)("div",{style:{padding:"0.5em",border:"1px solid #dedede",textAlign:"center",width:"20%"},children:[(0,jsx_runtime.jsx)("div",{children:iconName}),(0,jsx_runtime.jsx)(Visual.u,Object.assign({icon:(0,jsx_runtime.jsx)(IconComponent,{})},args))]},index)}))}),(0,jsx_runtime.jsx)(ui.tt,{content:"Big icons (80px)",options:{variant:"header",margin:{bottom:"24"}}}),(0,jsx_runtime.jsx)("div",{style:{display:"flex",flexWrap:"wrap",marginBottom:"32px"},children:args.widget.options.iconName.map((function(iconName,index){var IconComponent=assets[iconName];return iconName.includes("thin")&&!iconName.includes("small")?(0,jsx_runtime.jsxs)("div",{style:{padding:"0.5em",border:"1px solid #dedede",textAlign:"center",width:"20%"},children:[(0,jsx_runtime.jsx)("div",{children:iconName}),(0,jsx_runtime.jsx)(Visual.u,Object.assign({icon:(0,jsx_runtime.jsx)(IconComponent,{})},args))]},index):null}))}),(0,jsx_runtime.jsx)(ui.tt,{content:"Small icons (16px)",options:{variant:"header",margin:{bottom:"24"}}}),(0,jsx_runtime.jsx)("div",{style:{display:"flex",flexWrap:"wrap",marginBottom:"32px"},children:args.widget.options.iconName.map((function(iconName,index){var IconComponent=assets[iconName];return iconName.includes("small")?(0,jsx_runtime.jsxs)("div",{style:{padding:"0.5em",border:"1px solid #dedede",textAlign:"center",width:"20%"},children:[(0,jsx_runtime.jsx)("div",{children:iconName}),(0,jsx_runtime.jsx)(Visual.u,Object.assign({icon:(0,jsx_runtime.jsx)(IconComponent,{})},args))]},index):null}))})]})}};Primary.parameters=Object.assign({},Primary.parameters,{docs:Object.assign({},null==(_Primary$parameters=Primary.parameters)?void 0:_Primary$parameters.docs,{source:Object.assign({originalSource:"{\n  args: {\n    widget: {\n      options: {\n        iconName: IconsArray\n      }\n    }\n  },\n  render: args => {\n    return <>\n                <TextCommon content={'Small icons (24px)'} options={{\n        variant: 'header',\n        margin: {\n          bottom: '24'\n        }\n      }} />\n                <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: '32px'\n      }}>\n                    {args.widget.options.iconName.map((iconName, index) => {\n          const IconComponent = Svg[iconName];\n          if (!iconName.includes('thin') && !iconName.includes('small')) {\n            return <div key={index} style={{\n              padding: '0.5em',\n              border: '1px solid #dedede',\n              textAlign: 'center',\n              width: '20%'\n            }}>\n                                    <div>{iconName}</div>\n                                    <Visual icon={<IconComponent />} {...args} />\n                                </div>;\n          }\n          return null;\n        })}\n                </div>\n                <TextCommon content={'Big icons (80px)'} options={{\n        variant: 'header',\n        margin: {\n          bottom: '24'\n        }\n      }} />\n                <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: '32px'\n      }}>\n                    {args.widget.options.iconName.map((iconName, index) => {\n          const IconComponent = Svg[iconName];\n          if (iconName.includes('thin') && !iconName.includes('small')) {\n            return <div key={index} style={{\n              padding: '0.5em',\n              border: '1px solid #dedede',\n              textAlign: 'center',\n              width: '20%'\n            }}>\n                                    <div>{iconName}</div>\n                                    <Visual icon={<IconComponent />} {...args} />\n                                </div>;\n          }\n          return null;\n        })}\n                </div>\n                <TextCommon content={'Small icons (16px)'} options={{\n        variant: 'header',\n        margin: {\n          bottom: '24'\n        }\n      }} />\n                <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: '32px'\n      }}>\n                    {args.widget.options.iconName.map((iconName, index) => {\n          const IconComponent = Svg[iconName];\n          if (iconName.includes('small')) {\n            return <div key={index} style={{\n              padding: '0.5em',\n              border: '1px solid #dedede',\n              textAlign: 'center',\n              width: '20%'\n            }}>\n                                    <div>{iconName}</div>\n                                    <Visual icon={<IconComponent />} {...args} />\n                                </div>;\n          }\n          return null;\n        })}\n                </div>\n            </>;\n  }\n}"},null==(_Primary$parameters2=Primary.parameters)||null==(_Primary$parameters2=_Primary$parameters2.docs)?void 0:_Primary$parameters2.source)})});var __namedExportsOrder=["Primary"]},"./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js":module=>{module.exports=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target},module.exports.__esModule=!0,module.exports.default=module.exports}}]);